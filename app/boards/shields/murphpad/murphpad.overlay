/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/matrix_transform.h>

/ {
    chosen {
        zephyr,display = &oled;
        zmk,kscan = &kscan0;
    };

    kscan0: kscan {
        compatible = "zmk,kscan-gpio-matrix";

        diode-direction = "col2row";
        row-gpios
            = <&pro_micro 20 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 16 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 14 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 15 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 18 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 19 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            ;
        col-gpios
            = <&pro_micro 9  GPIO_ACTIVE_HIGH>
            , <&pro_micro 6  GPIO_ACTIVE_HIGH>
            , <&pro_micro 5  GPIO_ACTIVE_HIGH>
            , <&pro_micro 4  GPIO_ACTIVE_HIGH>
            , <&pro_micro 10 GPIO_ACTIVE_HIGH>
            ;
    };

    encoder_1: encoder_1 {
        compatible = "alps,ec11";
        label = "Encoder 1";
        a-gpios = <&pro_micro 8 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
        b-gpios = <&pro_micro 7 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
        resolution = <4>;
        status = "disabled";
    };

    encoder_2: encoder_2 {
        compatible = "alps,ec11";
        label = "Encoder 2";
        a-gpios = <&pro_micro 1 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
        b-gpios = <&pro_micro 0 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
        resolution = <4>;
        status = "disabled";
    };

    all_1u: keymap_transform_0 {
            compatible = "zmk,matrix-transform";
            columns = <5>;
            rows = <6>;
            map = <
                        RC(0,1) RC(0,2) RC(0,3) RC(0,4)
                        RC(1,1) RC(1,2) RC(1,3) RC(1,4)
                        RC(2,1) RC(2,2) RC(2,3) RC(2,4)
                RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4)
                RC(4,0) RC(4,1) RC(4,2) RC(4,3) RC(4,4)
                RC(5,0) RC(5,1) RC(5,2) RC(5,3) RC(5,4)

                        RC(0,0) RC(1,0) RC(2,0)
        >;
    };

    rh_numpad: keymap_transform_1 {
            compatible = "zmk,matrix-transform";
            columns = <5>;
            rows = <6>;
            map = <
                        RC(0,1) RC(0,2) RC(0,3) RC(0,4)
                        RC(1,1) RC(1,2) RC(1,3) RC(1,4)
                        RC(2,1) RC(2,2) RC(2,3) RC(2,4)
                RC(3,0)         RC(3,2) RC(3,3) RC(3,4)
                RC(4,0) RC(4,1) RC(4,2) RC(4,3) RC(4,4)
                RC(5,0)         RC(5,2)     RC(5,4)

                        RC(0,0) RC(1,0) RC(2,0)
        >;
    };

    lh_numpad: keymap_transform_2 {
            compatible = "zmk,matrix-transform";
            columns = <5>;
            rows = <6>;
            map = <
                        RC(0,1) RC(0,2) RC(0,3) RC(0,4)
                        RC(1,1) RC(1,2) RC(1,3) RC(1,4)
                        RC(2,1) RC(2,2) RC(2,3) RC(2,4)
                RC(3,0) RC(3,1) RC(3,2) RC(3,3)
                RC(4,0) RC(4,1) RC(4,2) RC(4,3) RC(4,4)
                RC(5,0)     RC(5,1)     RC(5,3)

                        RC(0,0) RC(1,0) RC(2,0)
        >;
    };

};

&pro_micro_i2c {
    status = "okay";

    oled: ssd1306@3c {
        compatible = "solomon,ssd1306fb";
        reg = <0x3c>;
        width = <128>;
        height = <32>;
        segment-offset = <0>;
        page-offset = <0>;
        display-offset = <0>;
        multiplex-ratio = <31>;
        segment-remap;
        com-invdir;
        com-sequential;
        prechargep = <0x22>;
    };
};
